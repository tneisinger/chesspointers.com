version: "3"
services:
  ${DATABASE_HOST}:
    image: postgres:13
    ports:
      - "35432:5432"
    environment:
      POSTGRES_USER: $DATABASE_USERNAME
      POSTGRES_PASSWORD: $DATABASE_PASSWORD
      POSTGRES_DB: $DATABASE_NAME
    volumes:
      - type: "volume"
        source: db-data
        target: /var/lib/postgresql/data

  node:
    build:
      context: $NODE_DIR
      dockerfile: $(basename $NODE_DOCKERFILE)
    depends_on:
      - $DATABASE_HOST
    user: "root"
    environment:
      TYPEORM_CONNECTION: $DATABASE_CONNECTION
      TYPEORM_HOST: $DATABASE_HOST
      TYPEORM_USERNAME: $DATABASE_USERNAME
      TYPEORM_PASSWORD: $DATABASE_PASSWORD
      TYPEORM_DATABASE: $DATABASE_NAME
      TYPEORM_PORT: $DATABASE_PORT
      TYPEORM_SYNCHRONIZE: 'true'
      TYPEORM_LOGGING: 'true'
      TYPEORM_ENTITIES: dist/shared/entity/*.js
      NODE_ENV: development
      PORT: 3000
    ports:
      - "3000:3000"
      - "8085:8085"
    command: npm run dev
    volumes:
      - type: "volume"
        source: node-modules
        target: /app/node_modules
      - type: "bind"
        source: ./services/node
        target: $NODE_PROJECT_DIR

volumes:
  node-modules:
  db-data:
